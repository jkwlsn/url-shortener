name: Run Coverage and Pytest
on: [pull_request]
jobs:
  run-coverage-pytest:
    name: Run coverage and pytest
    runs-on: ubuntu-latest
    steps:
        - name: Set up Python
          uses: actions/setup-python@v5
        - name: Check out repo
          uses: actions/checkout@v4
        - name: Install the latest version of uv
          uses: astral-sh/setup-uv@v6
          with:
            enable-cache: true
            cache-dependency-glob: "**/uv.lock"
        - name: Install dependencies from pyproject.toml and uv.lock
          run: uv sync
        - name: Create .env from repository variables
          run: |
              cat <<EOF > .env
              POSTGRES_USER=${{ vars.POSTGRES_USER }}
              POSTGRES_PASSWORD=${{ vars.POSTGRES_PASSWORD }}
              POSTGRES_DB=${{ vars.POSTGRES_DB }}
              POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
              POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
              SLUG_LENGTH=${{ vars.SLUG_LENGTH }}
              BASE_URL=${{ vars.BASE_URL }}
              MAX_URL_LENGTH=${{ vars.MAX_URL_LENGTH }}
              MIN_URL_LENGTH=${{ vars.MIN_URL_LENGTH }}
              MAX_LINK_AGE=${{ vars.MAX_LINK_AGE }}
              EOF
        - name: Install Docker
          uses: docker/setup-compose-action@v1
        - name: Run docker compose
          run: docker compose up -d
        - name: Wait for DB
          run: |
            until docker exec $(docker ps -qf "name=db") pg_isready -U ${{ vars.POSTGRES_USER }}; do
            echo "Waiting for PostgreSQL..."
            sleep 2
            done
        - name: Run Coverage and Pytest
          run: |
            uv run coverage run -m pytest -vvv
            uv run coverage report -m
